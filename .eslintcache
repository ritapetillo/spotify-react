[{"/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/Login.jsx":"1","/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/withUser.js":"2","/Users/ritapetillo/Documents/Strive/spotify-react/src/reportWebVitals.js":"3","/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/PrivateRoute.jsx":"4","/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/PlayList.jsx":"5","/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/Home.jsx":"6","/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/Sidebar.jsx":"7","/Users/ritapetillo/Documents/Strive/spotify-react/src/App.js":"8","/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/SingleSong.jsx":"9","/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/AlbumDetails.jsx":"10","/Users/ritapetillo/Documents/Strive/spotify-react/src/utils/spotify.js":"11","/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/Search.jsx":"12","/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/Player.jsx":"13","/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/SidebarOption.jsx":"14","/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/Footer.jsx":"15","/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/CardSpotify.jsx":"16","/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/TopBarUser.jsx":"17"},{"size":4878,"mtime":1613750615655,"results":"18","hashOfConfig":"19"},{"size":5568,"mtime":1613750819732,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1606260358946,"results":"21","hashOfConfig":"19"},{"size":609,"mtime":1606493691705,"results":"22","hashOfConfig":"19"},{"size":1485,"mtime":1606497064793,"results":"23","hashOfConfig":"19"},{"size":1050,"mtime":1613744039802,"results":"24","hashOfConfig":"19"},{"size":1556,"mtime":1613747040907,"results":"25","hashOfConfig":"19"},{"size":2641,"mtime":1613750457527,"results":"26","hashOfConfig":"19"},{"size":490,"mtime":1606497453209,"results":"27","hashOfConfig":"19"},{"size":742,"mtime":1606488751654,"results":"28","hashOfConfig":"19"},{"size":1277,"mtime":1606349160421,"results":"29","hashOfConfig":"19"},{"size":1429,"mtime":1606497046955,"results":"30","hashOfConfig":"19"},{"size":211,"mtime":1606349294667,"results":"31","hashOfConfig":"19"},{"size":247,"mtime":1606497081332,"results":"32","hashOfConfig":"19"},{"size":410,"mtime":1606477844723,"results":"33","hashOfConfig":"19"},{"size":934,"mtime":1606485618156,"results":"34","hashOfConfig":"19"},{"size":1211,"mtime":1606494230042,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1kt66zx",{"filePath":"38","messages":"39","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/Login.jsx",["84","85"],"/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/withUser.js",["86","87","88","89","90","91","92"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useStateProviderValue } from \"../StateProvider\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\nimport { loginUrl, fetchToken } from \"../utils/spotify\";\nimport queryString from \"query-string\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport ls from \"local-storage\";\nimport axios from \"axios\";\nconst spotifyApi = new SpotifyWebApi();\n\n// Function that will be called to refresh authorization\nconst refreshAuthLogic = (failedRequest) =>\n  axios.post(`${process.env.REACT_APP_API_URI}/api/auth/refresh`);\ncreateAuthRefreshInterceptor(axios, refreshAuthLogic);\n\nconst withUser = (WrappedComponent) => (props) => {\n  const [{ token }, dispatch] = useStateProviderValue();\n  const [playlist, setPlaylist] = useState([]);\n  const [newReleases, setNewReleases] = useState([]);\n  const [researchResults, setResearchResults] = useState([]);\n  const [categories, setCategories] = useState([]);\n\n  const [loaded, setLoaded] = useState(false);\n  const [user, setUser] = useState(\"\");\n\n  const [album, setAlbum] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {}, []);\n\n  //set the token to make api requests\n  spotifyApi.setAccessToken(ls.get(\"token\"));\n\n  // //after getting the token, I want to get the user\n  // const getUser = async () => {\n  //   if (ls.get(\"token\")) {\n  //     spotifyApi.setAccessToken(ls.get(\"token\"));\n  //     let currentUser = await spotifyApi.getMe();\n  //     if (currentUser) {\n  //       setUser(currentUser);\n  //     }\n  //   }\n  // };\n\n  //after getting the token, I want to get the current user\n  const getCurrentUser = async () => {\n    const res = await axios(`${process.env.REACT_APP_API_URI}/api/spotify/me`, {\n      withCredentials: true,\n    });\n\n    const data = await res.data;\n    if (data) {\n      setUser(data);\n    }\n  };\n\n  //after getting the token, I want to get the current user\n  const logout = async () => {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URI}/api/auth/logout`,\n      {\n        withCredentials: true,\n      }\n    );\n\n    const data = await res.data;\n    if (data) {\n      setUser(\"\");\n      history.push(\"/login\");\n    }\n  };\n\n  //after getting the token, I want to get the current user\n  const getPlaylists = async () => {\n    const res = await axios(\n      `${process.env.REACT_APP_API_URI}/api/spotify/me/playlist`,\n      {\n        withCredentials: true,\n      }\n    );\n\n    const data = await res.data;\n    console.log(data);\n    if (data) {\n      setPlaylist(data.items);\n      console.log(data);\n    }\n  };\n  //get all current user playlist\n  // const getPlaylists = () => {\n  //   return spotifyApi.getUserPlaylists(user?.id).then(\n  //     function (data) {\n  //       setPlaylist(data.items);\n  //       console.log(\"User playlists\", data.items);\n  //     },\n  //     function (err) {\n  //       console.error(err);\n  //     }\n  //   );\n  // };\n\n  // const getResearch = (q, t) => {\n  //   spotifyApi.searchAlbums(q).then(\n  //     function (data) {\n  //       setResearchResults(data);\n  //       setLoaded(!loaded);\n  //       console.log(data);\n  //     },\n  //     function (err) {\n  //       console.error(err);\n  //     }\n  //   );\n  // };\n\n  //search\n  const getResearch = async (q) => {\n    const res = await axios(\n      `${process.env.REACT_APP_API_URI}/api/spotify/search?q=${q}`,\n      {\n        withCredentials: true,\n      }\n    );\n\n    const data = await res.data;\n    console.log(data);\n    if (data) {\n      setResearchResults(data);\n      setLoaded(!loaded);\n    }\n  };\n\n  //get all categories\n  const fetchCategories = async () => {\n    try {\n      console.log(\"fetchaios\");\n      const res = await axios(\n        `${process.env.REACT_APP_API_URI}/api/spotify/categories`,\n        {\n          withCredentials: true,\n        }\n      );\n      const data = await res.data;\n      setCategories(data.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  //get all new releases\n  const fetchNewReleases = async () => {\n    const res = await axios(\n      `${process.env.REACT_APP_API_URI}/api/spotify/new-releases`,\n      {\n        withCredentials: true,\n      }\n    );\n\n    const data = await res.data;\n    console.log(data.data);\n    setNewReleases(data.data?.albums?.items);\n    console.log(newReleases);\n  };\n\n  //getAlubumdetails\n  // const getAlbum = (id) => {\n  //   spotifyApi.getAlbum(id).then(\n  //     function (data) {\n  //       setAlbum(data);\n  //       setLoaded(true);\n  //       console.log(\"Albums information\", data);\n  //     },\n  //     function (err) {\n  //       console.error(err);\n  //     }\n  //   );\n  // };\n  const getAlbum = async (id) => {\n    console.log(id);\n    const res = await axios(\n      `${process.env.REACT_APP_API_URI}/api/spotify/album/${id}`,\n      {\n        withCredentials: true,\n      }\n    );\n\n    const data = await res.data;\n    setAlbum(data);\n    setLoaded(true);\n    console.log(\"Albums information\", data);\n  };\n\n  const logOut = () => {};\n\n  useEffect(() => {\n    getPlaylists();\n    fetchCategories();\n    fetchNewReleases();\n    getCurrentUser();\n  }, []);\n\n  return (\n    <WrappedComponent\n      user={user}\n      token={token}\n      playlist={playlist}\n      newReleases={newReleases}\n      album={album}\n      getAlbum={getAlbum}\n      researchResults={researchResults}\n      loaded={loaded}\n      getResearch={getResearch}\n      fetchNewReleases={fetchNewReleases}\n      logout={logout}\n      {...props}\n    />\n  );\n};\n\nexport default withUser;\n","/Users/ritapetillo/Documents/Strive/spotify-react/src/reportWebVitals.js",[],"/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/PrivateRoute.jsx",["93"],"/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/PlayList.jsx",["94","95","96","97"],"import React, { useState, useEffect } from \"react\";\nimport withUser from \"./withUser\";\nimport { Card, Col, Container, Row , Table} from \"react-bootstrap\";\nimport \"../Styles/Playlist.css\";\nimport AlbumDetails from \"./AlbumDetails\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport SingleSong from \"./SingleSong\";\nimport TopBarUser from \"./TopBarUser\";\n\n\n\nconst PlayList = ({ match, album, getAlbum, loaded }) => {\n  const getCurrentAlbum = async () => {\n    await getAlbum(match.params.id);\n    console.log(album);\n  };\n\n  useEffect(() => {\n    getCurrentAlbum();\n  }, [loaded]);\n  return (\n      <Container className=\"playlist\">\n          <TopBarUser/>\n      {album && <AlbumDetails album={album} />}\n      <div className=\"playlist__bottom\">\n        <Row className=\"d-flex align-items-center\">\n                  <PlayCircleFilledIcon />\n                  <FavoriteBorderIcon />\n                  <MoreHorizIcon />\n              </Row>\n              <Row>\n                  <Table hover variant=\"dark\">\n  <thead>\n    <tr>\n      <th>#</th>\n      <th>Title</th>\n      <th>Time</th>\n     \n    </tr>\n  </thead>\n  <tbody>\n                          {album && album.tracks.items.map(track => <SingleSong track={track}/>)}\n  </tbody>\n</Table>\n              </Row>\n      </div>\n    </Container>\n  );\n};\n\nexport default withUser(PlayList);\n",["98","99"],"/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/Home.jsx",["100","101","102","103","104","105","106","107"],"import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport withUser from \"./withUser\";\nimport Sidebar from \"./Sidebar\";\nimport { Card, Col, Container, Row } from \"react-bootstrap\";\nimport \"../Styles/Home.css\";\nimport CardSpotify from \"./CardSpotify\";\nimport { NewReleases } from \"@material-ui/icons\";\nimport TopBarUser from \"./TopBarUser\";\n\nfunction Home({ user, token, newReleases, fetchNewReleases }) {\n  useEffect(() => {\n    fetchNewReleases();\n  }, []);\n  useEffect(() => {\n    console.log(newReleases);\n  }, [fetchNewReleases]);\n  return (\n    <Container className=\"home\">\n      <TopBarUser />\n      <Row>\n        <h4 className=\"my-4 ml-2\">New Releases</h4>\n      </Row>\n      <Row>\n        {newReleases &&\n          newReleases.map((item) => (\n            <CardSpotify\n              image={item.images[0].url}\n              name={item.name}\n              artists={item.artists}\n              id={item.id}\n            />\n          ))}\n      </Row>\n    </Container>\n  );\n}\n\nexport default withUser(Home);\n",["108","109"],"/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/Sidebar.jsx",[],["110","111"],"/Users/ritapetillo/Documents/Strive/spotify-react/src/App.js",["112","113","114","115","116","117","118","119","120"],"import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport ls from \"local-storage\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./App.css\";\nimport Login from \"./Components/Login\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport Home from \"./Components/Home\";\nimport { loginUrl, fetchToken } from \"./utils/spotify\";\nimport Player from \"./Components/Player\";\nimport { useStateProviderValue } from \"./StateProvider\";\nimport Sidebar from \"./Components/Sidebar\";\nimport Footer from \"./Components/Footer\";\nimport PrivateRoute from \"./Components/PrivateRoute\";\nimport PlayList from \"./Components/PlayList\";\nimport Search from \"./Components/Search\";\n\nconst spotifyApi = new SpotifyWebApi();\n\nfunction App() {\n  const [r_token, setR_token] = useState(null);\n  const [token, setToken] = useState(null);\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [{ user }, dispatch] = useStateProviderValue();\n  const location = useLocation();\n\n  //get token and refresh token function\n  const getToken = async (code) => {\n    try {\n      let res = await fetchToken(code);\n      if (res.access_token) {\n        ls.set(\"token\", res.access_token);\n        ls.set(\"refresh_token\", res.refresh_token);\n        dispatch({\n          type: \"SET_TOKEN\",\n          token: ls.get(\"token\"),\n          refreshToken: ls.get(\"refresh_token\"),\n        });\n        setToken(res.access_token);\n        setR_token(res.refresh_token);\n        getUser(res.access_token);\n      }\n    } catch (e) {}\n  };\n\n  //after getting the token, I want to get the user\n  const getUser = async (token) => {\n    if (token) {\n      spotifyApi.setAccessToken(token);\n      let currentUser = await spotifyApi.getMe();\n      if (currentUser) {\n        setCurrentUser(currentUser);\n\n        dispatch({\n          type: \"SET_USER\",\n          user: currentUser,\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    const search = queryString.parse(window.location.search);\n    const code = search[\"code\"];\n    if (code) {\n      getToken(code);\n    }\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Route exact path=\"/login\" component={Login} />\n      {location.pathname !== \"/login\" && <Sidebar />}\n      <Route exact path=\"/\" render={(props) => <Home {...props} />} />\n      <Route\n        exact\n        path=\"/playlist/:id\"\n        render={(props) => <PlayList {...props} />}\n      />\n      <Route exact path=\"/search\" render={(props) => <Search {...props} />} />\n\n      {location.pathname !== \"/login\" && <Footer />}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/SingleSong.jsx",[],"/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/AlbumDetails.jsx",["121","122"],"import React from 'react'\nimport { Card, Col, Container, Row } from \"react-bootstrap\";\n\n\nfunction AlbumDetails({album}) {\n    return (\n      <Row className=\"mt-4 playlist__details\">\n        <Col md={3}>\n          <img className=\"img-fluid\" src={album?.images[0]?.url} alt=\"\" />\n        </Col>\n        <Col md={9} className=\"d-flex flex-column justify-content-end\">\n          <h6 style={{ textTransform: \"uppercase\" }}>{album.type}</h6>\n          <h1 className=\"playlist__album-title\">{album.name}</h1>\n          <h6>\n            {album.artists.map((artist) => artist.name)} -{\" \"}\n            {album.release_date.substring(0, 4)} - {album.total_tracks} tracks\n          </h6>\n        </Col>\n      </Row>\n    );\n}\n\nexport default AlbumDetails\n","/Users/ritapetillo/Documents/Strive/spotify-react/src/utils/spotify.js",["123","124"],"export const authEndpoint = \"https://accounts.spotify.com/authorize\";\nexport const redirectUri = \"http%3A%2F%2Flocalhost%3A3000%2F\";\nconst clientID = \"e54184c2056e4fceba268bad7ae4175f\";\nconst secret = '90bf6fe6367b4d92b75aa2bca47478f0'\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-recently-played\",\n  \"user-modify-playback-state\",\n  \"user-top-read\",\n  \"user-modify-playback-state\",\n];\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientID}&redirect_uri=${redirectUri}&scope=${scopes.join(\n  \"%20\"\n)}&response_type=code&show_dialog=true`;\n\nexport const fetchToken = async (code) => {\n  const auth__ecripted = 'Basic ' + btoa(`${clientID}:${secret}`);\n  let body = {\n    grant_type: \"authorization_code\",\n    code,\n    redirect_uri: \"http%3A%2F%2Flocalhost%3A3000%2F\"\n  };\n  body = JSON.stringify(body)\n  const headers = new Headers({\n    \n  });\n  try {\n      const res = await fetch(`https://accounts.spotify.com/api/token`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n          Authorization: auth__ecripted,\n        },\n        body: `grant_type=authorization_code&code=${code}&redirect_uri=${redirectUri}`,\n      });\n    return res.json()\n  } catch (err) {\n    console.log(err)\n  }\n\n}\n",["125","126"],"/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/Search.jsx",["127","128","129","130","131","132","133"],"import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport withUser from \"./withUser\";\nimport Sidebar from \"./Sidebar\";\nimport { Card, Col, Container, Row } from \"react-bootstrap\";\nimport \"../Styles/Home.css\";\nimport CardSpotify from \"./CardSpotify\";\nimport { NewReleases } from \"@material-ui/icons\";\nimport TopBarUser from \"./TopBarUser\";\n\nfunction Search({ user, token, loaded, researchResults, getResearch }) {\n  useEffect(() => { \n    if (researchResults.albums) {console.log(researchResults.albums.items);}\n  }, [loaded]);\n  return (\n    <Container className=\"home\">\n      <TopBarUser />\n      <Row className=\"d-flex flex-column\">\n        <h4 className=\"my-4 ml-2 \">Search</h4>\n\n        <input\n          type=\"text\"\n          placeholder=\"Search an artist\"\n          style={{\n            height: \"40px\",\n            borderRadius: \"20px\",\n            width: \"50vw\",\n            padding: \"5px 10px\",\n            outline: \"none\",\n          }}\n          onChange={(e) => getResearch(e.target.value)}\n        />\n      </Row>\n      <Row>\n        {researchResults.albums &&\n          researchResults.albums.items?.map((item) => (\n            <CardSpotify\n              image={item.images[0].url}\n              name={item.name}\n              artists={item.artists}\n              id={item.id}\n            />\n          ))}\n      </Row>\n    </Container>\n  );\n}\n\nexport default withUser(Search);\n","/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/Player.jsx",[],"/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/SidebarOption.jsx",[],"/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/Footer.jsx",["134"],"import React from 'react'\nimport '../Styles/Footer.css'\n\nexport default function Footer() {\n    return (\n      <div className=\"footer\">\n        <iframe\n          src=\"https://open.spotify.com/embed/album/1DFixLWuPkv3KT3TnV35m3\"\n          frameborder=\"0\"\n          allowtransparency=\"true\"\n                allow=\"encrypted-media\"\n                style={{width:'100vw'}}\n        ></iframe>\n      </div>\n    );\n}\n",["135","136"],"/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/CardSpotify.jsx",["137"],"import React from 'react'\nimport { Card, Col, Button } from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport '../Styles/Card.css'\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\n\nexport default function CardSpotify({image,name,artists,id}) {\n    return (\n      <Col md={4} lg={3} className=\"cardSpotify\">\n        <Link to={`playlist/${id}`}>\n        <Card className=\"cardSpotify-card\">\n          <Card.Img variant=\"top\" src={image} />\n          <Card.Body>\n            <PlayCircleFilledIcon />\n            <Card.Title className=\"cardSpotify-card-title\">{name}</Card.Title>\n            <Card.Text className=\"cardSpotify-card-text line-clamp\">\n              <p>\n                {artists.map((artist) => (\n                  <span>{artist.name}<br/></span>\n                ))}\n              </p>\n            </Card.Text>\n          </Card.Body>\n          </Card>\n        </Link>\n      </Col>\n    );\n}\n","/Users/ritapetillo/Documents/Strive/spotify-react/src/Components/TopBarUser.jsx",["138","139","140","141"],{"ruleId":"142","severity":1,"message":"143","line":3,"column":10,"nodeType":"144","messageId":"145","endLine":3,"endColumn":18},{"ruleId":"142","severity":1,"message":"146","line":7,"column":9,"nodeType":"144","messageId":"145","endLine":7,"endColumn":16},{"ruleId":"142","severity":1,"message":"143","line":6,"column":10,"nodeType":"144","messageId":"145","endLine":6,"endColumn":18},{"ruleId":"142","severity":1,"message":"147","line":6,"column":20,"nodeType":"144","messageId":"145","endLine":6,"endColumn":30},{"ruleId":"142","severity":1,"message":"148","line":7,"column":8,"nodeType":"144","messageId":"145","endLine":7,"endColumn":19},{"ruleId":"142","severity":1,"message":"149","line":19,"column":21,"nodeType":"144","messageId":"145","endLine":19,"endColumn":29},{"ruleId":"142","severity":1,"message":"150","line":23,"column":10,"nodeType":"144","messageId":"145","endLine":23,"endColumn":20},{"ruleId":"142","severity":1,"message":"151","line":194,"column":9,"nodeType":"144","messageId":"145","endLine":194,"endColumn":15},{"ruleId":"152","severity":1,"message":"153","line":201,"column":6,"nodeType":"154","endLine":201,"endColumn":8,"suggestions":"155"},{"ruleId":"142","severity":1,"message":"156","line":3,"column":10,"nodeType":"144","messageId":"145","endLine":3,"endColumn":31},{"ruleId":"142","severity":1,"message":"157","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"158","line":3,"column":10,"nodeType":"144","messageId":"145","endLine":3,"endColumn":14},{"ruleId":"142","severity":1,"message":"159","line":3,"column":16,"nodeType":"144","messageId":"145","endLine":3,"endColumn":19},{"ruleId":"152","severity":1,"message":"160","line":22,"column":6,"nodeType":"154","endLine":22,"endColumn":14,"suggestions":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"142","severity":1,"message":"157","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"148","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":19},{"ruleId":"142","severity":1,"message":"166","line":4,"column":8,"nodeType":"144","messageId":"145","endLine":4,"endColumn":15},{"ruleId":"142","severity":1,"message":"158","line":5,"column":10,"nodeType":"144","messageId":"145","endLine":5,"endColumn":14},{"ruleId":"142","severity":1,"message":"159","line":5,"column":16,"nodeType":"144","messageId":"145","endLine":5,"endColumn":19},{"ruleId":"142","severity":1,"message":"167","line":8,"column":10,"nodeType":"144","messageId":"145","endLine":8,"endColumn":21},{"ruleId":"152","severity":1,"message":"168","line":14,"column":6,"nodeType":"154","endLine":14,"endColumn":8,"suggestions":"169"},{"ruleId":"152","severity":1,"message":"170","line":17,"column":6,"nodeType":"154","endLine":17,"endColumn":24,"suggestions":"171"},{"ruleId":"162","replacedBy":"172"},{"ruleId":"164","replacedBy":"173"},{"ruleId":"162","replacedBy":"174"},{"ruleId":"164","replacedBy":"175"},{"ruleId":"142","severity":1,"message":"176","line":9,"column":17,"nodeType":"144","messageId":"145","endLine":9,"endColumn":23},{"ruleId":"142","severity":1,"message":"143","line":11,"column":10,"nodeType":"144","messageId":"145","endLine":11,"endColumn":18},{"ruleId":"142","severity":1,"message":"177","line":12,"column":8,"nodeType":"144","messageId":"145","endLine":12,"endColumn":14},{"ruleId":"142","severity":1,"message":"178","line":16,"column":8,"nodeType":"144","messageId":"145","endLine":16,"endColumn":20},{"ruleId":"142","severity":1,"message":"179","line":23,"column":10,"nodeType":"144","messageId":"145","endLine":23,"endColumn":17},{"ruleId":"142","severity":1,"message":"180","line":24,"column":10,"nodeType":"144","messageId":"145","endLine":24,"endColumn":15},{"ruleId":"142","severity":1,"message":"181","line":25,"column":10,"nodeType":"144","messageId":"145","endLine":25,"endColumn":21},{"ruleId":"142","severity":1,"message":"182","line":26,"column":12,"nodeType":"144","messageId":"145","endLine":26,"endColumn":16},{"ruleId":"152","severity":1,"message":"183","line":70,"column":6,"nodeType":"154","endLine":70,"endColumn":8,"suggestions":"184"},{"ruleId":"142","severity":1,"message":"158","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":14},{"ruleId":"142","severity":1,"message":"185","line":2,"column":21,"nodeType":"144","messageId":"145","endLine":2,"endColumn":30},{"ruleId":"142","severity":1,"message":"186","line":24,"column":25,"nodeType":"144","messageId":"145","endLine":24,"endColumn":29},{"ruleId":"142","severity":1,"message":"187","line":25,"column":9,"nodeType":"144","messageId":"145","endLine":25,"endColumn":16},{"ruleId":"162","replacedBy":"188"},{"ruleId":"164","replacedBy":"189"},{"ruleId":"142","severity":1,"message":"157","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"148","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":19},{"ruleId":"142","severity":1,"message":"166","line":4,"column":8,"nodeType":"144","messageId":"145","endLine":4,"endColumn":15},{"ruleId":"142","severity":1,"message":"158","line":5,"column":10,"nodeType":"144","messageId":"145","endLine":5,"endColumn":14},{"ruleId":"142","severity":1,"message":"159","line":5,"column":16,"nodeType":"144","messageId":"145","endLine":5,"endColumn":19},{"ruleId":"142","severity":1,"message":"167","line":8,"column":10,"nodeType":"144","messageId":"145","endLine":8,"endColumn":21},{"ruleId":"152","severity":1,"message":"190","line":14,"column":6,"nodeType":"154","endLine":14,"endColumn":14,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":7,"column":9,"nodeType":"194","endLine":13,"endColumn":10},{"ruleId":"162","replacedBy":"195"},{"ruleId":"164","replacedBy":"196"},{"ruleId":"142","severity":1,"message":"197","line":2,"column":21,"nodeType":"144","messageId":"145","endLine":2,"endColumn":27},{"ruleId":"142","severity":1,"message":"157","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"156","line":7,"column":10,"nodeType":"144","messageId":"145","endLine":7,"endColumn":31},{"ruleId":"152","severity":1,"message":"198","line":17,"column":7,"nodeType":"154","endLine":17,"endColumn":9,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":33,"column":15,"nodeType":"194","endLine":33,"endColumn":45},"no-unused-vars","'loginUrl' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'fetchToken' is defined but never used.","'queryString' is defined but never used.","'dispatch' is assigned a value but never used.","'categories' is assigned a value but never used.","'logOut' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchNewReleases'. Either include it or remove the dependency array.","ArrayExpression",["202"],"'useStateProviderValue' is defined but never used.","'useState' is defined but never used.","'Card' is defined but never used.","'Col' is defined but never used.","React Hook useEffect has a missing dependency: 'getCurrentAlbum'. Either include it or remove the dependency array.",["203"],"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"'Sidebar' is defined but never used.","'NewReleases' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchNewReleases'. Either include it or remove the dependency array. If 'fetchNewReleases' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["206"],"React Hook useEffect has a missing dependency: 'newReleases'. Either include it or remove the dependency array.",["207"],["204"],["205"],["204"],["205"],"'Switch' is defined but never used.","'Player' is defined but never used.","'PrivateRoute' is defined but never used.","'r_token' is assigned a value but never used.","'token' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.",["208"],"'Container' is defined but never used.","'body' is assigned a value but never used.","'headers' is assigned a value but never used.",["204"],["205"],"React Hook useEffect has a missing dependency: 'researchResults.albums'. Either include it or remove the dependency array.",["209"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement",["204"],["205"],"'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["210"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},"no-global-assign","no-unsafe-negation",{"desc":"211","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},"Update the dependencies array to be: [fetchNewReleases]",{"range":"224","text":"225"},"Update the dependencies array to be: [getCurrentAlbum, loaded]",{"range":"226","text":"227"},{"range":"228","text":"225"},"Update the dependencies array to be: [fetchNewReleases, newReleases]",{"range":"229","text":"230"},"Update the dependencies array to be: [getToken]",{"range":"231","text":"232"},"Update the dependencies array to be: [loaded, researchResults.albums]",{"range":"233","text":"234"},"Update the dependencies array to be: [user]",{"range":"235","text":"236"},[5171,5173],"[fetchNewReleases]",[724,732],"[getCurrentAlbum, loaded]",[494,496],[554,572],"[fetchNewReleases, newReleases]",[2130,2132],"[getToken]",[557,565],"[loaded, researchResults.albums]",[514,516],"[user]"]